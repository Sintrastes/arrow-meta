plugins {
    id "org.jetbrains.kotlin.multiplatform"
    id "org.jlleitschuh.gradle.ktlint"
}

apply from: "${rootDir}/${SUBPROJECT_MPP}"
apply from: "https://raw.githubusercontent.com/arrow-kt/arrow/main/arrow-libs/gradle/publication-mpp.gradle"


kotlin {
    targets.all {
        compilations.all {
            kotlinOptions {
                freeCompilerArgs += ["-Xplugin=${buildDir}/libs/new-plugin.jar",
                                     "-P", "plugin:arrow.meta.plugin.compiler:generatedSrcOutputDir=${buildDir}"]
            }
        }
    }
    sourceSets {
        jvmMain {
            dependencies {
                api("io.arrow-kt:arrow-core:$ARROW_VERSION") {
                    exclude group: "org.jetbrains.kotlin"
                }
            }
        }
    }
}
// Script
configurations.create("toCopy")

tasks.register("setup") {
    doLast {
        if (!file("$buildDir/libs").exists()) {
            file("$buildDir/libs").mkdirs()

            copy {
                from(configurations.getAt("toCopy")).into("$buildDir/libs")
            }
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    dependsOn 'setup'
}

dependencies {
    "toCopy"(project(":refined-types-plugin"))
}